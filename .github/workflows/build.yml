name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonar:
    name: SonarCloud Scan
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - uses: actions/checkout@v2

    # Set up JDK 17 for Sonar
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: '17'

    # Cache Maven dependencies
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    # Build the project and run tests with coverage (needed for Sonar)
    - name: Build and test with Maven
      run: mvn clean verify --file pom.xml

    # Run SonarCloud scan
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@v1.5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Coloca tu token de Sonar aqu√≠
      with:
        projectBaseDir: ./
  
  build:
    needs: sonar
    name: Build
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - uses: actions/checkout@v1

    # Set up JDK 11
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: '17'

    # Cache Maven packages
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    # Build the application using Maven
    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml

    # Upload the JAR as an artifact
    - name: Upload JAR
      uses: actions/upload-artifact@v2
      with:
        name: artifact
        path: target/cicd-0.0.1-SNAPSHOT.jar
